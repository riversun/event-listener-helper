/*! event-listener-helper(https://github.com/riversun/event-listener-helper) v1.0.0 Copyright (c) 2020 riversun.org@gmail.com */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("SortableTable",[],t):"object"==typeof exports?exports.SortableTable=t():e.SortableTable=t()}(this,(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/",n(n.s=0)}([function(e,t,n){e.exports=n(1)},function(e,t,n){"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}n.r(t),n.d(t,"default",(function(){return i}));var i=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.listeners=new Map,this.listenerNum=0}var t,n,i;return t=e,(n=[{key:"addEventListener",value:function(e,t,n,r){if(arguments.length>4)throw Error("Too many arguments");this._checkTypeOfOptions(r);var o=null;r&&r.listenerName&&(o=r.listenerName);var i={listenerName:null,success:!0};e.addEventListener(t,n,r);var s=this.listeners.get(e);s||(s=new Map,this.listeners.set(e,s));var a=s.get(t);if(a||(a=new Map,s.set(t,a)),null!==o)a.set(o,n),i.listenerName=o;else{var u="listener-".concat(this.listenerNum);a.set(u,n),i.listenerName=u,this.listenerNum+=1}return i}},{key:"removeEventListener",value:function(e,t,n,r){this._checkTypeOfOptions(r);var o=null;r&&r.listenerName&&(o=r.listenerName);var i={success:!1,message:"unknown error"},s=this.listeners.get(e);if(!s)return i.message="DOM element ".concat(e,"(id=").concat(e.id,") doesn't have any listeners."),i;var a=s.get(t);if(!a)return i.message="DOM element ".concat(e,"(id=").concat(e.id,") doesn't have \"").concat(t,'" listeners.'),i;if(null===n){var u=a.get(o);if(!u)return i.message="DOM element ".concat(e,"(id=").concat(e.id,") doesn't have \"").concat(t,'" listener "').concat(o,'"'),i;a.delete(o),e.removeEventListener(t,u,r),i.success=!0}return n&&(this._isMapHasValue(a,n)?(e.removeEventListener(t,n,r),i.success=!0):(i.success=!1,i.message="Specified listener could not be deleted from DOM element ".concat(e,"(id=").concat(e.id,").\n        Since the specified listener is not registered as an event listener,\n        it may have been registered outside of event-listener-helper."))),i}},{key:"_isMapHasValue",value:function(e,t){return Array.from(e.values()).includes(t)}},{key:"_checkTypeOfOptions",value:function(e){if("object"!==r(e)&&void 0!==e)throw"boolean"==typeof e?new Error("Type of boolean is not accepted as the fourth argument you specify.\n      If you want to enable useCapture, specify {capture: true} as the fourth parameter instead."):new Error("Type of ".concat(r(e)," is not accepted as the fourth argument you specify.\n      If you want to specify options, specify an object like {capture: true, listenerName:'my-listener-01'}."))}}])&&o(t.prototype,n),i&&o(t,i),e}()}]).default}));